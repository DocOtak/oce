% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctd.R
\name{ctdTrim}
\alias{ctdTrim}
\title{Trim Beginning and Ending of a CTD cast}
\usage{
ctdTrim(x, method, removeDepthInversions = FALSE, parameters = NULL,
  debug = getOption("oceDebug"))
}
\arguments{
\item{x}{A \code{ctd} object, i.e. one inheriting from \code{\link{ctd-class}}.}

\item{method}{A string (or a vector of two strings) specifying the trimming method, or a function to
be used to determine data indices to keep.  If \code{method} is not provided, \code{"downcast"} is
assumed. See \dQuote{Details}.}

\item{removeDepthInversions}{Logical value indicating whether to remove any levels at which depth is
less than, or equal to, a depth above.  (This is needed if the object is to be assembled into a
section, unless \code{\link{ctdDecimate}} will be used, which will remove the inversions.}

\item{parameters}{A list whose elements depend on the method; see \dQuote{Details}.}

\item{debug}{an integer specifying whether debugging information is
to be printed during the processing. This is a general parameter that
is used by many \code{oce} functions. Generally, setting \code{debug=0}
turns off the printing, while higher values suggest that more information
be printed. If one function calls another, it usually reduces the value of
\code{debug} first, so that a user can often obtain deeper debugging
by specifying higher \code{debug} values.}
}
\value{
An object of \code{\link{ctd-class}}, with data having been trimmed in some way.
}
\description{
Often in CTD profiling, the goal is to isolate only the downcast, discarding measurements made in
the air, in an equilibration phase in which the device is held below the water surface, and then the
upcast phase that follows the downcast.  This is handled reasonably well by \code{ctdTrim} with
\code{method="downcast"}, although it is almost always best to use \code{\link{plotScan}} to
investigate the data, and then use the \code{method="index"} or \code{method="scan"} method based on
visual inspection of the data.
}
\examples{
\dontrun{
library(oce)
data(ctdRaw)
plot(ctdRaw) # barely recognizable, due to pre- and post-cast junk
plot(ctdTrim(ctdRaw)) # looks like a real profile ...
plot(ctdDecimate(ctdTrim(ctdRaw),method="boxcar")) # ... smoothed
# Demonstrate use of a function. The scan limits were chosen
# by using locator(2) on a graph made by plotScan(ctdRaw).
trimByIndex<-function(data, parameters) {
  parameters[1] < data$scan & data$scan < parameters[2]
}
trimmed <- ctdTrim(ctdRaw, trimByIndex, parameters=c(130, 380))
plot(trimmed)
}

}
\references{
The Seabird CTD instrument is described at
\url{http://www.seabird.com/products/spec_sheets/19plusdata.htm}.

Seasoft V2: SBE Data Processing, SeaBird Scientific, 05/26/2016
}
\seealso{
Other things related to \code{ctd} data: \code{\link{[[,ctd-method}},
  \code{\link{[[<-,ctd-method}}, \code{\link{as.ctd}},
  \code{\link{cnvName2oceName}}, \code{\link{ctd-class}},
  \code{\link{ctdDecimate}}, \code{\link{ctdFindProfiles}},
  \code{\link{ctdRaw}}, \code{\link{ctd}},
  \code{\link{handleFlags,ctd-method}},
  \code{\link{plot,ctd-method}}, \code{\link{plotProfile}},
  \code{\link{plotScan}}, \code{\link{plotTS}},
  \code{\link{read.ctd.itp}}, \code{\link{read.ctd.odf}},
  \code{\link{read.ctd.sbe}},
  \code{\link{read.ctd.woce.other}},
  \code{\link{read.ctd.woce}}, \code{\link{read.ctd}},
  \code{\link{subset,ctd-method}},
  \code{\link{summary,ctd-method}},
  \code{\link{woceNames2oceNames}}, \code{\link{write.ctd}}
}
\author{
Dan Kelley and Clark Richards
}
