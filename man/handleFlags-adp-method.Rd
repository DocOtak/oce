% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adp.R
\docType{methods}
\name{handleFlags,adp-method}
\alias{handleFlags,adp-method}
\title{Handle Flags in adp Objects}
\usage{
\S4method{handleFlags}{adp}(object, flags = list(), actions = list(),
  debug = integer())
}
\arguments{
\item{object}{A \code{adp} object, i.e. one inheriting from \code{\link{adp-class}}.}

\item{flags}{An optional \code{\link{list}} containing (a)
items with names of entries in the \code{data} slot of \code{object},
or (b) a single unnamed item. In the first case, the attention is
focussed on the named items, while in the second case the
all the data in the \code{object}'s \code{data} slot are examined.
Each element in the list must be set to an integer or vector of integers,
specifying conditions to be met before actions are to be taken.
See \dQuote{Details} for the default that is used if \code{flags} is not supplied.}

\item{actions}{An optional \code{\link{list}} that contains items with
names that match those in the \code{flags} argument.  If \code{actions}
is not supplied, the default will be to set all values identified by
\code{flags} to \code{NA}; this can also be specified by
specifying \code{actions=list("NA")}. It is also possible to specify
functions that calculate replacement values. These are provided
with \code{object} as the single argument, and must return a
replacement for the data item in question.
See \dQuote{Details} for the default that is used if \code{actions} is not supplied.}

\item{debug}{An optional integer specifying the degree of debugging, with
value 0 meaning to skip debugging and 1 or higher meaning to print some
information about the arguments and the data. It is usually a good idea to set
this to 1 for initial work with a dataset, to see which flags are being
handled for each data item. If not supplied, this defaults to the value of
\code{\link{getOption}("oceDebug")}.}
}
\description{
Data-quality flags are stored in the \code{metadata}
slot of \code{\link{oce-class}} objects in a
\code{\link{list}} named \code{flags}.
The present function (a generic that has specialized versions
for various data classes) provides a way to
manipulate the core data based on
the data-quality flags. For example, a common operation is to replace suspicious
or erroneous data with \code{NA}.

If \code{metadata$flags} in the object supplied as the first argument
is empty, then that object is returned, unaltered.
Otherwise, \code{handleFlags} analyses the data-quality flags within
the object, in relation to the \code{flags} argument, and interprets
the \code{action} argument to select an action to be applied to matched
data.

Reasonable defaults are used if \code{flags} and \code{actions}
are not supplied (see \sQuote{Details}),
but different schemes are used in different
data archives, so it is risky to rely on these defaults.
It is usually necessary to tailor \code{flags} and \code{actions}
to the data and the analysis goals.
}
\details{
If \code{flags} and \code{actions} are not provided, the
default is to consider a flag value of 1 to indicate bad data,
and 0 to indicate good data. Note that it only makes sense to use
velocity (\code{v}) flags, because other flags are, at least
for some instruments, stored as \code{raw} quantities, and such
quantities may not be set to \code{NA}.
}
\examples{
# Flag low "goodness" or high "error beam" values.
library(oce)
data(adp)
# Extract the data, to compute the flag. Note that the
# whole flag array is computed and then inserted into
# the object as whole.
v <- adp[["v"]]
g <- adp[["g", "numeric"]]
vFlag <- array(0, dim=dim(v))
gThreshold <- 25
v4Threshold <- 0.45
for (i in 1:3)
    vFlag[,,i] <- ifelse((g[,,i]+g[,,4])<gThreshold | v[,,4]>v4Threshold, 1, 0)
adp[["vFlag"]] <- vFlag
# Now that the object has a velocity flag set, we may
# use \\code{handleFlags} to set corresponding data to NA.
adpClean <- handleFlags(adp)
# Demonstrate the (subtle) change graphically.
par(mfcol=c(2, 1))
plot(adp, which=1)      # top: data
plot(adpClean, which=1) # bottom: after handling flags

}
\seealso{
Other functions that handle data-quality flags: \code{\link{handleFlags,argo-method}},
  \code{\link{handleFlags,ctd-method}},
  \code{\link{handleFlags,section-method}},
  \code{\link{handleFlags}}

Other things related to \code{adp} data: \code{\link{[[,adp-method}},
  \code{\link{[[<-,adp-method}}, \code{\link{adp-class}},
  \code{\link{adpEnsembleAverage}}, \code{\link{adp}},
  \code{\link{as.adp}}, \code{\link{beamName}},
  \code{\link{beamToXyzAdp}}, \code{\link{beamToXyzAdv}},
  \code{\link{beamToXyz}}, \code{\link{beamUnspreadAdp}},
  \code{\link{binmapAdp}}, \code{\link{enuToOtherAdp}},
  \code{\link{enuToOther}}, \code{\link{plot,adp-method}},
  \code{\link{read.ad2cp}}, \code{\link{read.adp.nortek}},
  \code{\link{read.adp.rdi}},
  \code{\link{read.adp.sontek.serial}},
  \code{\link{read.adp.sontek}}, \code{\link{read.adp}},
  \code{\link{read.aquadoppHR}},
  \code{\link{read.aquadoppProfiler}},
  \code{\link{read.aquadopp}}, \code{\link{rotateAboutZ}},
  \code{\link{subset,adp-method}},
  \code{\link{summary,adp-method}}, \code{\link{toEnuAdp}},
  \code{\link{toEnu}}, \code{\link{velocityStatistics}},
  \code{\link{xyzToEnuAdp}}, \code{\link{xyzToEnu}}
}
