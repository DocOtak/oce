% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctd.R
\docType{methods}
\name{setFlags,ctd-method}
\alias{setFlags,ctd-method}
\title{Set flags in a ctd object}
\usage{
\S4method{setFlags}{ctd}(object, name = NULL, value = NULL,
  default = NULL, i = NULL, j = NULL, debug = getOption("oceDebug"))
}
\arguments{
\item{object}{An oce object.}

\item{name}{Character string indicating the name of the variable to be flagged. If
this variable is not contained in the object's \code{data} slot, an error is reported.}

\item{value}{The value to be inserted in the flag.}

\item{default}{The default (good) value of the flag. This is used only if
the object does not yet have yet any entries for the \code{name} flag. In that case,
storage is set up for the flag, it is filled with the \code{default} value, and after
that the}

\item{i}{Integer index (required).}

\item{j}{Optional second integer index.}

\item{debug}{Integer set to 0 for quiet action or to 1 for some debugging.}
}
\value{
An object with flags set as indicated.
}
\description{
Set data-quality flags within a ctd object.

Set data-quality flags within an oce object.

This function changes specified entries in the object's data-quality
flags, leaving other entries unaltered. (If the object does not yet
have a flag set up to correspond with data of the indicated
\code{name}, then such a flag is set up, with values set to \code{default}.

The choice of flag values is up to the user, but it may make sense to
stick to oceanographic conventions; see the \code{handleFlags} function
for the object class.
}
\section{Development note}{

This function was added in late April, 2018, and is likely to undergo
changes until the end of June of that year.  Use with caution.
}

\examples{
\dontrun{
## Interactive salinity quality-check based on TS plot
library(oce)
options(eos="gsw")
data(ctd)
ctdQC <- ctd
Sspan <- diff(range(ctdQC[["SA"]]))
Tspan <- diff(range(ctdQC[["CT"]]))
n <- length(ctdQC[["SA"]])
plotTS(ctdQC, type="o")
message("Click on bad points; quit by clicking to right of plot")
for (i in seq_len(n)) {
    xy <- locator(1)
    if (xy$x > par("usr")[2])
        break
    i <- which.min(abs(ctdQC[["SA"]] - xy$x)/Sspan + abs(ctdQC[["CT"]] - xy$y)/Tspan)
    # WHP-CTD convention: 2=acceptable, 4=bad
    ctdQC <- setFlags(ctdQC, "salinity", value=3, default=2, i=i)
    ctdQC <- handleFlags(ctdQC)
    plotTS(ctdQC, type="o")
}
}
}
\seealso{
Other functions relating to data-quality flags: \code{\link{handleFlags,adp-method}},
  \code{\link{handleFlags,argo-method}},
  \code{\link{handleFlags,ctd-method}},
  \code{\link{handleFlags,section-method}},
  \code{\link{handleFlags}}, \code{\link{setFlags}}
}
